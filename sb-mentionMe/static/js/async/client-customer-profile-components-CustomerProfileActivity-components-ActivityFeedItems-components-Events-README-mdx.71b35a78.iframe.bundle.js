"use strict";(globalThis.webpackChunk_mention_me_frontend=globalThis.webpackChunk_mention_me_frontend||[]).push([["6492"],{"./src/client/customer/profile/components/CustomerProfileActivity/components/ActivityFeedItems/components/Events/README.mdx":function(e,n,o){o.r(n),o.d(n,{default:function(){return r}}),o("../node_modules/react/index.js");var t=o("../node_modules/react/jsx-runtime.js"),i=o("../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js"),s=o("../node_modules/@storybook/addon-docs/dist/index.mjs");function d(e){let n={code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h_,{title:"Portal / Customer Profile / ActivityFeed / Events"}),"\n",(0,t.jsx)(n.h1,{id:"activity-feed-events",children:"Activity Feed Events"}),"\n",(0,t.jsx)(n.p,{children:"These are the individual pieces of text which make up an event. They aim to describe, briefly and succicently, what\nhappened when this event occurred."}),"\n",(0,t.jsx)(n.h2,{id:"guidance",children:"Guidance"}),"\n",(0,t.jsx)(n.p,{children:"Getting the wording right, and making it clear and unambiguous is difficult, so here's a set of rules to try and follow."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Start from the customer. I.e. if Alice introduces Bob and we're looking at Bob's page: ",(0,t.jsx)(n.em,{children:"start"}),' with Bob, like: "Bob\nwas introduced by Alice".']}),"\n",(0,t.jsx)(n.li,{children:"Always link to other customers."}),"\n",(0,t.jsxs)(n.li,{children:["Use the ",(0,t.jsx)(n.code,{children:"<UserIdentifier>"})," component to link to individuals"]}),"\n",(0,t.jsx)(n.li,{children:'Use the active voice. If you can finish the sentence with "by gremlins", then it should be reworded.\nSee: https://mention-me.atlassian.net/wiki/spaces/MAR/pages/610926759/Our+tone+of+voice+and+writing+guide'}),"\n",(0,t.jsxs)(n.li,{children:["Always make a story. See ",(0,t.jsx)(n.code,{children:"ActivityFeedItem.stories.tsx"})," where you can define an object. You should implement a story\nfor every conditional inside each component."]}),"\n"]})]})}function r(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},"../node_modules/@storybook/addon-docs/dist/index.mjs":function(e,n,o){o.d(n,{h_:function(){return t.h_}}),o("../node_modules/@storybook/addon-docs/dist/chunk-NUUEMKO5.mjs"),o("../node_modules/@storybook/addon-docs/dist/chunk-H6MOWX77.mjs");var t=o("../node_modules/storybook-builder-rsbuild/node_modules/@storybook/blocks/dist/index.mjs")},"../node_modules/@storybook/addon-docs/node_modules/@mdx-js/react/lib/index.js":function(e,n,o){o.d(n,{Z:function(){return r},a:function(){return d}});var t=o("../node_modules/react/index.js");let i={},s=t.createContext(i);function d(e){let n=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);