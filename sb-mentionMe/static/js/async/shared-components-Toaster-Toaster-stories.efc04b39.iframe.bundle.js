"use strict";(globalThis.webpackChunk_mention_me_frontend=globalThis.webpackChunk_mention_me_frontend||[]).push([["6892"],{"./src/shared/components/Toaster/Toaster.stories.tsx":function(e,n,t){t.r(n),t.d(n,{NormalWithAction:()=>g,LoadingWithCompleted:()=>Y,Success:()=>f,default:()=>j,PromiseNotificationSuccess:()=>C,Info:()=>S,Normal:()=>m,SuccessWithAction:()=>w,Loading:()=>T,LoadingWithFailed:()=>x,PromiseNotificationFail:()=>P,InfoWithAction:()=>k,Warning:()=>y,WarningWithAction:()=>N});var o=t("../node_modules/react/jsx-runtime.js"),i=t("../node_modules/@mention-me/flamingo-ui/build/index.es.js"),a=t("../node_modules/@storybook/test/dist/index.mjs"),s=t("./src/shared/context/NotificationContext.tsx"),r=t("../node_modules/sonner/dist/index.mjs");let c=(0,t("../node_modules/styled-components/dist/styled-components.browser.esm.js").ZP)(r.x7).withConfig({displayName:"Toaster.styled__Toaster"})(['margin:75px 0;&[data-sonner-toaster][data-theme="light"]{--normal-bg:',";--normal-border:",";--normal-text:",";--success-bg:",";--success-border:",";--success-text:",";--info-bg:",";--info-border:",";--info-text:",";--warning-bg:",";--warning-border:",";--warning-text:",";--error-bg:",";--error-border:",";--error-text:",";}[data-close-button]{border-color:",';}:where([data-sonner-toast][data-styled="true"]){gap:',";}[data-title]{font-weight:700;font-size:14px;}p{margin:0;}"],(0,i.Ys)("White"),(0,i.Ys)("Navy40"),(0,i.Ys)("NavyBase"),(0,i.Ys)("GreenPale"),(0,i.Ys)("GreenDark"),(0,i.Ys)("GreenFont"),(0,i.Ys)("BluePale"),(0,i.Ys)("BlueFont"),(0,i.Ys)("NavyBase"),(0,i.Ys)("YellowPale"),(0,i.Ys)("YellowFont"),(0,i.Ys)("YellowFont"),(0,i.Ys)("RedPale"),(0,i.Ys)("RedFont"),(0,i.Ys)("RedFont"),(0,i.Ys)("Navy40"),(0,i.W0)(1.5)),d=()=>(0,o.jsx)(c,{visibleToasts:7,richColors:!0,closeButton:!0});d.__docgenInfo={description:"",methods:[],displayName:"Toaster"};let l={position:"top-left"},p={...l,action:{label:"Click me",onClick:()=>{console.log("Action clicked")}}},u=function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"Toast heading";return async n=>{let{canvasElement:t}=n,o=(0,a.uh)(t);await a.mV.click(await o.findByText("Trigger Notification")),await (0,a.X_)(()=>{o.getByText(e)})}},h=e=>{let{onClick:n}=e;return(0,o.jsx)(i.zx,{onClick:n,children:"Trigger Notification"})},m={play:u(),render:()=>{let{addNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when a normal notification is triggered somewhere in the app",l)}})}},g={play:u(),render:()=>{let{addNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when a normal notification is triggered somewhere in the app",p)}})}},f={play:u(),render:()=>{let{addSuccessNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when a success notification is triggered somewhere in the app",l)}})}},w={play:u(),render:()=>{let{addSuccessNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when a success notification is triggered somewhere in the app",p)}})}},y={play:u(),render:()=>{let{addWarningNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when a warning notification is triggered somewhere in the app",l)}})}},N={play:u(),render:()=>{let{addWarningNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when a warning notification is triggered somewhere in the app",p)}})}},S={play:u(),render:()=>{let{addInfoNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when an info notification is triggered somewhere in the app",l)}})}},k={play:u(),render:()=>{let{addInfoNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when an info notification is triggered somewhere in the app",p)}})}},T={play:u(),render:()=>{let{addLoadingNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e("Toast heading","You will see this when an a notification is set to loading somewhere in the app",l)}})}},Y={play:u("Loading toast"),render:()=>{let{addLoadingNotification:e,addSuccessNotification:n}=(0,s.kE)();return(0,o.jsx)(h,{onClick:async()=>{let t=e("Toast heading","You will see this when an a notification is set to loading somewhere in the app",l);await new Promise(e=>{setTimeout(()=>e("completed"),200)}),n("Loading toast","This loading toast has completed",{id:t,...l})}})}},x={play:u("Loading toast"),render:()=>{let{addLoadingNotification:e,addErrorNotification:n}=(0,s.kE)();return(0,o.jsx)(h,{onClick:async()=>{let t=e("Toast heading","You will see this when an a notification is set to loading somewhere in the app",l);await new Promise(e=>{setTimeout(()=>e("completed"),200)}),n("Loading toast","This request failed",{id:t,...l})}})}},C={play:u("Loading toast"),render:()=>{let{addPromiseNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e(new Promise(e=>{setTimeout(()=>e("completed"),200)}),{loading:"Loading toast",success:"This promise has completed",...l,duration:500})}})}},P={play:u("Loading toast"),render:()=>{let{addPromiseNotification:e}=(0,s.kE)();return(0,o.jsx)(h,{onClick:()=>{e(new Promise((e,n)=>{setTimeout(()=>n(Error("Something went wrong")),200)}),{loading:"Loading toast",error:"Something went wrong",...l})}})}},j={title:"Shared / Toaster",component:d,parameters:{layout:"padded",chromatic:{delay:1e3}},decorators:[e=>(0,o.jsx)("div",{style:{height:"600px"},children:(0,o.jsxs)(s.JB,{children:[(0,o.jsx)(d,{}),(0,o.jsx)(e,{})]})})]};m.parameters={...m.parameters,docs:{...m.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addNotification("Toast heading", "You will see this when a normal notification is triggered somewhere in the app", defaultProps);\n    }} />;\n  }\n} satisfies Story',...m.parameters?.docs?.source}}},g.parameters={...g.parameters,docs:{...g.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addNotification("Toast heading", "You will see this when a normal notification is triggered somewhere in the app", actionDefaultProps);\n    }} />;\n  }\n} satisfies Story',...g.parameters?.docs?.source}}},f.parameters={...f.parameters,docs:{...f.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addSuccessNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addSuccessNotification("Toast heading", "You will see this when a success notification is triggered somewhere in the app", defaultProps);\n    }} />;\n  }\n} satisfies Story',...f.parameters?.docs?.source}}},w.parameters={...w.parameters,docs:{...w.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addSuccessNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addSuccessNotification("Toast heading", "You will see this when a success notification is triggered somewhere in the app", actionDefaultProps);\n    }} />;\n  }\n} satisfies Story',...w.parameters?.docs?.source}}},y.parameters={...y.parameters,docs:{...y.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addWarningNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addWarningNotification("Toast heading", "You will see this when a warning notification is triggered somewhere in the app", defaultProps);\n    }} />;\n  }\n} satisfies Story',...y.parameters?.docs?.source}}},N.parameters={...N.parameters,docs:{...N.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addWarningNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addWarningNotification("Toast heading", "You will see this when a warning notification is triggered somewhere in the app", actionDefaultProps);\n    }} />;\n  }\n} satisfies Story',...N.parameters?.docs?.source}}},S.parameters={...S.parameters,docs:{...S.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addInfoNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addInfoNotification("Toast heading", "You will see this when an info notification is triggered somewhere in the app", defaultProps);\n    }} />;\n  }\n} satisfies Story',...S.parameters?.docs?.source}}},k.parameters={...k.parameters,docs:{...k.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addInfoNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addInfoNotification("Toast heading", "You will see this when an info notification is triggered somewhere in the app", actionDefaultProps);\n    }} />;\n  }\n} satisfies Story',...k.parameters?.docs?.source}}},T.parameters={...T.parameters,docs:{...T.parameters?.docs,source:{originalSource:'{\n  play: play(),\n  render: () => {\n    const {\n      addLoadingNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addLoadingNotification("Toast heading", "You will see this when an a notification is set to loading somewhere in the app", defaultProps);\n    }} />;\n  }\n} satisfies Story',...T.parameters?.docs?.source}}},Y.parameters={...Y.parameters,docs:{...Y.parameters?.docs,source:{originalSource:'{\n  play: play("Loading toast"),\n  render: () => {\n    const {\n      addLoadingNotification,\n      addSuccessNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={async () => {\n      const id = addLoadingNotification("Toast heading", "You will see this when an a notification is set to loading somewhere in the app", defaultProps);\n      await new Promise(resolve => {\n        setTimeout(() => resolve("completed"), 200);\n      });\n      addSuccessNotification("Loading toast", "This loading toast has completed", {\n        id,\n        ...defaultProps\n      });\n    }} />;\n  }\n} satisfies Story',...Y.parameters?.docs?.source}}},x.parameters={...x.parameters,docs:{...x.parameters?.docs,source:{originalSource:'{\n  play: play("Loading toast"),\n  render: () => {\n    const {\n      addLoadingNotification,\n      addErrorNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={async () => {\n      const id = addLoadingNotification("Toast heading", "You will see this when an a notification is set to loading somewhere in the app", defaultProps);\n      await new Promise(resolve => {\n        setTimeout(() => resolve("completed"), 200);\n      });\n      addErrorNotification("Loading toast", "This request failed", {\n        id,\n        ...defaultProps\n      });\n    }} />;\n  }\n} satisfies Story',...x.parameters?.docs?.source}}},C.parameters={...C.parameters,docs:{...C.parameters?.docs,source:{originalSource:'{\n  play: play("Loading toast"),\n  render: () => {\n    const {\n      addPromiseNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addPromiseNotification(new Promise(resolve => {\n        setTimeout(() => resolve("completed"), 200);\n      }), {\n        loading: "Loading toast",\n        success: "This promise has completed",\n        ...defaultProps,\n        duration: 500\n      });\n    }} />;\n  }\n} satisfies Story',...C.parameters?.docs?.source}}},P.parameters={...P.parameters,docs:{...P.parameters?.docs,source:{originalSource:'{\n  play: play("Loading toast"),\n  render: () => {\n    const {\n      addPromiseNotification\n    } = useNotificationDispatch();\n    return <StoryButton onClick={() => {\n      addPromiseNotification(new Promise((resolve, reject) => {\n        setTimeout(() => reject(new Error("Something went wrong")), 200);\n      }), {\n        loading: "Loading toast",\n        error: "Something went wrong",\n        ...defaultProps\n      });\n    }} />;\n  }\n} satisfies Story',...P.parameters?.docs?.source}}}}}]);