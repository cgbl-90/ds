"use strict";(self.webpackChunkcgbl_design_system=self.webpackChunkcgbl_design_system||[]).push([[828],{"./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{function _objectWithoutProperties(e,t){if(null==e)return{};var o,r,i=function _objectWithoutPropertiesLoose(r,e){if(null==r)return{};var t={};for(var n in r)if({}.hasOwnProperty.call(r,n)){if(e.includes(n))continue;t[n]=r[n]}return t}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)o=s[r],t.includes(o)||{}.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}__webpack_require__.d(__webpack_exports__,{A:()=>_objectWithoutProperties})},"./src/stories/Components/OptionSelector.stories.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{LanguageSelector:()=>LanguageSelector,NotificationToggle:()=>NotificationToggle,ThemeSelector:()=>ThemeSelector,__namedExportsOrder:()=>__namedExportsOrder,default:()=>OptionSelector_stories});__webpack_require__("./node_modules/react/index.js");var Label=__webpack_require__("./src/stories/Atoms/Label.jsx"),Radio=__webpack_require__("./src/stories/Atoms/Radio.js"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const OptionSelector=_ref=>{let{label,options,selected,onChange}=_ref;return(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsx)(Label.J,{text:label}),options.map((opt=>(0,jsx_runtime.jsx)(Radio.s,{label:opt.label,checked:selected===opt.value,onChange:()=>onChange(opt.value)},opt.value)))]})};OptionSelector.__docgenInfo={description:"",methods:[],displayName:"OptionSelector"};const OptionSelector_stories={title:"COMPONENTS/OptionSelector",component:OptionSelector},ThemeSelector={args:{label:"Choose Theme",selected:"dark",options:[{label:"Light",value:"light"},{label:"Dark",value:"dark"}],onChange:val=>console.log(val)}},LanguageSelector={args:{label:"Language",selected:"en",options:[{label:"English",value:"en"},{label:"Español",value:"es"},{label:"Português",value:"pt"}],onChange:val=>console.log(val)}},NotificationToggle={args:{label:"Enable Notifications",selected:"yes",options:[{label:"Yes",value:"yes"},{label:"No",value:"no"}],onChange:val=>console.log(val)}},__namedExportsOrder=["ThemeSelector","LanguageSelector","NotificationToggle"];ThemeSelector.parameters={...ThemeSelector.parameters,docs:{...ThemeSelector.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Choose Theme",\n    selected: "dark",\n    options: [{\n      label: "Light",\n      value: "light"\n    }, {\n      label: "Dark",\n      value: "dark"\n    }],\n    onChange: val => console.log(val)\n  }\n}',...ThemeSelector.parameters?.docs?.source}}},LanguageSelector.parameters={...LanguageSelector.parameters,docs:{...LanguageSelector.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Language",\n    selected: "en",\n    options: [{\n      label: "English",\n      value: "en"\n    }, {\n      label: "Español",\n      value: "es"\n    }, {\n      label: "Português",\n      value: "pt"\n    }],\n    onChange: val => console.log(val)\n  }\n}',...LanguageSelector.parameters?.docs?.source}}},NotificationToggle.parameters={...NotificationToggle.parameters,docs:{...NotificationToggle.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Enable Notifications",\n    selected: "yes",\n    options: [{\n      label: "Yes",\n      value: "yes"\n    }, {\n      label: "No",\n      value: "no"\n    }],\n    onChange: val => console.log(val)\n  }\n}',...NotificationToggle.parameters?.docs?.source}}}},"./src/stories/Atoms/Label.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{J:()=>Label});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Label=_ref=>{let{text,size,color}=_ref;const sizeClass="storybook-label--".concat(size),colorClass="primary"===color?"storybook-label--primary":"secondary"===color?"storybook-label--secondary":"";return(0,jsx_runtime.jsx)("label",{className:["storybook-label",sizeClass,colorClass].join(" "),children:text})};Label.defaultProps={size:"medium",color:"default"},Label.__docgenInfo={description:"",methods:[],displayName:"Label",props:{size:{defaultValue:{value:'"medium"',computed:!1},description:"",type:{name:"enum",value:[{value:'"small"',computed:!1},{value:'"medium"',computed:!1},{value:'"large"',computed:!1}]},required:!1},color:{defaultValue:{value:'"default"',computed:!1},description:"",type:{name:"enum",value:[{value:'"default"',computed:!1},{value:'"primary"',computed:!1},{value:'"secondary"',computed:!1}]},required:!1},text:{description:"",type:{name:"string"},required:!0}}}},"./src/stories/Atoms/Radio.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{s:()=>Radio});var objectSpread2=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectSpread2.js"),objectWithoutProperties=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),jsx_runtime=(__webpack_require__("./node_modules/react/index.js"),__webpack_require__("./node_modules/react/jsx-runtime.js"));const _excluded=["label","checked","state"],Radio=_ref=>{let{label,checked,state}=_ref,props=(0,objectWithoutProperties.A)(_ref,_excluded);const stateClass=state?"storybook-radio--".concat(state):"",checkedClass=checked?"storybook-radio--checked":"";return(0,jsx_runtime.jsxs)("label",(0,objectSpread2.A)((0,objectSpread2.A)({className:["storybook-radio",stateClass,checkedClass].join(" ")},props),{},{children:[(0,jsx_runtime.jsx)("input",{type:"radio",checked,readOnly:!0}),label]}))};Radio.defaultProps={checked:!1,state:null},Radio.__docgenInfo={description:"",methods:[],displayName:"Radio",props:{checked:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},state:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"enum",value:[{value:'"hover"',computed:!1},{value:'"pressed"',computed:!1}]},required:!1},label:{description:"",type:{name:"string"},required:!0}}}}}]);