"use strict";(self.webpackChunkcgbl_design_system=self.webpackChunkcgbl_design_system||[]).push([[440],{"./src/stories/Atoms/Button.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{IsChromaticButton:()=>IsChromaticButton,Large:()=>Large,Primary:()=>Primary,PrimaryNoBorder:()=>PrimaryNoBorder,PrimaryPressed:()=>PrimaryPressed,Secondary:()=>Secondary,SecondaryHover:()=>SecondaryHover,SecondaryNoBorder:()=>SecondaryNoBorder,ShadowButtonStory:()=>ShadowButtonStory,Small:()=>Small,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Button_stories});var Button=__webpack_require__("./src/stories/Atoms/Button.jsx");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");class ShadowButton extends HTMLElement{constructor(){super();const shadow=this.attachShadow({mode:"open"}),button=document.createElement("button");button.textContent=this.getAttribute("label")||"Default Label",button.style.backgroundColor=this.getAttribute("background-color")||"blue",button.style.color="white",button.style.border="none",button.style.padding="10px 20px",button.style.cursor="pointer",button.addEventListener("click",(()=>{const clickEvent=new CustomEvent("button-click",{detail:{label:button.textContent},bubbles:!0,composed:!0});this.dispatchEvent(clickEvent)})),shadow.appendChild(button)}}customElements.define("shadow-button",ShadowButton);const ShadowButtonComponent=props=>(0,jsx_runtime.jsx)("shadow-button",{label:props.label,"background-color":props.backgroundColor,onClick:props.onClick});ShadowButtonComponent.__docgenInfo={description:"",methods:[],displayName:"ShadowButtonComponent"};const Button_stories={title:"ATOMS/Button",component:Button.$,parameters:{layout:"centered"},tags:["autodocs"],argTypes:{backgroundColor:{control:"color"},state:{control:{type:"select",options:["hover","pressed","noborder",null]}}},args:{onClick:()=>{}}},chromaticArgs=function isChromatic(windowArg){const windowToCheck=windowArg||"undefined"!=typeof window&&window;return!(!windowToCheck||!/Chromatic/.test(windowToCheck.navigator.userAgent)&&!/chromatic=true/.test(windowToCheck.location.href))}()?"Chromatic Button":"Storybook Button",Primary={args:{primary:!0,label:"Primary"}},Secondary={args:{label:"Secondary"}},Large={args:{size:"large",label:"Large Button"}},Small={args:{size:"small",label:"Small Button"}},PrimaryPressed={args:{primary:!0,label:"Primary Pressed",state:"pressed"}},SecondaryHover={args:{label:"Secondary Hover",state:"hover"}},PrimaryNoBorder={args:{primary:!0,label:"Primary Without Border",state:"noborder"}},SecondaryNoBorder={args:{label:"Secondary Without Border",state:"noborder"}},IsChromaticButton={args:{primary:!1,label:chromaticArgs,state:"noborder"}},ShadowButtonStory={args:{label:"Shadow DOM Button",backgroundColor:"green"},render:args=>(0,jsx_runtime.jsx)(ShadowButtonComponent,{...args})},__namedExportsOrder=["Primary","Secondary","Large","Small","PrimaryPressed","SecondaryHover","PrimaryNoBorder","SecondaryNoBorder","IsChromaticButton","ShadowButtonStory"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    primary: true,\n    label: "Primary"\n  }\n}',...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Secondary"\n  }\n}',...Secondary.parameters?.docs?.source}}},Large.parameters={...Large.parameters,docs:{...Large.parameters?.docs,source:{originalSource:'{\n  args: {\n    size: "large",\n    label: "Large Button"\n  }\n}',...Large.parameters?.docs?.source}}},Small.parameters={...Small.parameters,docs:{...Small.parameters?.docs,source:{originalSource:'{\n  args: {\n    size: "small",\n    label: "Small Button"\n  }\n}',...Small.parameters?.docs?.source}}},PrimaryPressed.parameters={...PrimaryPressed.parameters,docs:{...PrimaryPressed.parameters?.docs,source:{originalSource:'{\n  args: {\n    primary: true,\n    label: "Primary Pressed",\n    state: "pressed"\n  }\n}',...PrimaryPressed.parameters?.docs?.source}}},SecondaryHover.parameters={...SecondaryHover.parameters,docs:{...SecondaryHover.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Secondary Hover",\n    state: "hover"\n  }\n}',...SecondaryHover.parameters?.docs?.source}}},PrimaryNoBorder.parameters={...PrimaryNoBorder.parameters,docs:{...PrimaryNoBorder.parameters?.docs,source:{originalSource:'{\n  args: {\n    primary: true,\n    label: "Primary Without Border",\n    state: "noborder"\n  }\n}',...PrimaryNoBorder.parameters?.docs?.source}}},SecondaryNoBorder.parameters={...SecondaryNoBorder.parameters,docs:{...SecondaryNoBorder.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Secondary Without Border",\n    state: "noborder"\n  }\n}',...SecondaryNoBorder.parameters?.docs?.source}}},IsChromaticButton.parameters={...IsChromaticButton.parameters,docs:{...IsChromaticButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    primary: false,\n    label: chromaticArgs,\n    state: "noborder"\n  }\n}',...IsChromaticButton.parameters?.docs?.source}}},ShadowButtonStory.parameters={...ShadowButtonStory.parameters,docs:{...ShadowButtonStory.parameters?.docs,source:{originalSource:'{\n  args: {\n    label: "Shadow DOM Button",\n    backgroundColor: "green" // Example background color\n  },\n  render: args => <ShadowButtonComponent {...args} /> // Render the Shadow Button\n}',...ShadowButtonStory.parameters?.docs?.source}}}},"./src/stories/Atoms/Button.jsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{$:()=>Button});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Button=_ref=>{let{primary,backgroundColor,size,label,state,...props}=_ref;const mode=primary?"storybook-button--primary":"storybook-button--secondary",stateClass=state?`storybook-button--${state}`:"";return(0,jsx_runtime.jsx)("button",{type:"button",className:["storybook-button",`storybook-button--${size}`,mode,stateClass].join(" "),style:backgroundColor?{backgroundColor}:{},...props,children:label})};Button.defaultProps={backgroundColor:null,primary:!1,size:"medium",state:null,onClick:void 0},Button.__docgenInfo={description:"",methods:[],displayName:"Button",props:{backgroundColor:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"string"},required:!1},primary:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},size:{defaultValue:{value:'"medium"',computed:!1},description:"",type:{name:"enum",value:[{value:'"small"',computed:!1},{value:'"medium"',computed:!1},{value:'"large"',computed:!1}]},required:!1},state:{defaultValue:{value:"null",computed:!1},description:"",type:{name:"enum",value:[{value:'"hover"',computed:!1},{value:'"pressed"',computed:!1},{value:'"noborder"',computed:!1}]},required:!1},onClick:{defaultValue:{value:"undefined",computed:!0},description:"",type:{name:"func"},required:!1},label:{description:"",type:{name:"string"},required:!0}}}}}]);