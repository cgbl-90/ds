"use strict";(self.webpackChunkcgbl_design_system=self.webpackChunkcgbl_design_system||[]).push([[369],{"./src/stories/Atoms/DividerLine.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,SecondaryBoldDashed:()=>SecondaryBoldDashed,SuccessDotted:()=>SuccessDotted,__namedExportsOrder:()=>__namedExportsOrder,default:()=>DividerLine_stories});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Divider=_ref=>{let{style,dashed,dotted,bold}=_ref,className=`divider divider--${style}`;return dashed&&(className+=" divider--dashed"),dotted&&(className+=" divider--dotted"),bold&&(className+=" divider--bold"),(0,jsx_runtime.jsx)("hr",{className})},DividerLine=Divider;Divider.__docgenInfo={description:"",methods:[],displayName:"Divider"};const DividerLine_stories={title:"Atoms/Divider",component:DividerLine,argTypes:{style:{control:{type:"select",options:["primary","secondary","success","warning","danger"]}},dashed:{control:"boolean"},dotted:{control:"boolean"},bold:{control:"boolean"}}},Template=args=>(0,jsx_runtime.jsx)(DividerLine,{...args}),Primary=Template.bind({});Primary.args={style:"primary",dashed:!1,dotted:!1,bold:!1};const SecondaryBoldDashed=Template.bind({});SecondaryBoldDashed.args={style:"secondary",dashed:!0,dotted:!1,bold:!0};const SuccessDotted=Template.bind({});SuccessDotted.args={style:"success",dashed:!1,dotted:!0,bold:!1};const __namedExportsOrder=["Primary","SecondaryBoldDashed","SuccessDotted"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"args => <Divider {...args} />",...Primary.parameters?.docs?.source}}},SecondaryBoldDashed.parameters={...SecondaryBoldDashed.parameters,docs:{...SecondaryBoldDashed.parameters?.docs,source:{originalSource:"args => <Divider {...args} />",...SecondaryBoldDashed.parameters?.docs?.source}}},SuccessDotted.parameters={...SuccessDotted.parameters,docs:{...SuccessDotted.parameters?.docs,source:{originalSource:"args => <Divider {...args} />",...SuccessDotted.parameters?.docs?.source}}}}}]);